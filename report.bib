@article{papert1999logo,
  title={Logo philosophy and implementation},
  author={Papert, Seymour and others},
  journal={LCSI, Canada},
  year={1999}
}
@book{goldberg1983smalltalk,
  title={Smalltalk-80: the language and its implementation},
  author={Goldberg, Adele and Robson, David},
  year={1983},
  publisher={Addison-Wesley Longman Publishing Co., Inc.}
}
@article{Resnick:2009:SP:1592761.1592779,
address = {New York, NY, USA},
author = {Resnick, Mitchel and Maloney, John and Monroy-Hern\'{a}ndez, Andr\'{e}s and Rusk, Natalie and Eastmond, Evelyn and Brennan, Karen and Millner, Amon and Rosenbaum, Eric and Silver, Jay and Silverman, Brian and Kafai, Yasmin},
doi = {10.1145/1592761.1592779},
issn = {0001-0782},
journal = {Commun. ACM},
number = {11},
pages = {60--67},
publisher = {ACM},
title = {{Scratch: Programming for All}},
url = {http://doi.acm.org/10.1145/1592761.1592779},
volume = {52},
year = {2009}
}
@inproceedings{Kay:2011:PCC:800193.1971922,
abstract = {This note speculates about the emergence of personal, portable information manipulators and their effects .when used by both children and adults. Although it should be read as science fiction, current trends in miniaturization and price reduction almost guarantee that many of the notions discussed will actually happen in the near future.},
address = {New York, NY, USA},
author = {Kay, Alan C},
booktitle = {Proceedings of the ACM national conference},
doi = {10.1145/800193.1971922},
issn = {18736009},
pages = {1},
pmid = {20926156},
publisher = {ACM},
series = {ACM '72},
title = {{A Personal Computer for Children of All Ages}},
url = {http://bitsavers.org/pdf/xerox/smalltalk/Kay\_\_A\_Personal\_Computer\_For\_Children\_Of\_All\_Ages\_Aug72.pdf},
year = {1972}
}
@article{victor2012learnable,
abstract = {Programming is a way of thinking, not a rote skill. Learning about "for" loops is not learning to program, any more than learning about pencils is learning to draw.$\backslash$n    People understand what they can see. If a programmer cannot see what a program is doing, she can't understand it.$\backslash$n$\backslash$nThus, the goals of a programming system should be:$\backslash$n$\backslash$n    to support and encourage powerful ways of thinking$\backslash$n    to enable programmers to see and understand the execution of their programs},
author = {Victor, Bret},
journal = {Worrydream. com},
title = {{Learnable Programming}},
url = {http://worrydream.com/LearnableProgramming/},
year = {2012}
}
@inproceedings{sorensen2005impromptu,
author = {Sorensen, Andrew},
booktitle = {Proceedings of the Australasian Computer Music Conference},
number = {July},
pages = {2--4},
title = {{Impromptu: An interactive programming environment for composition and performance}},
year = {2009}
}
@article{sorensen2010programming,
  title={Programming with time: cyber-physical programming with impromptu},
  author={Sorensen, Andrew and Gardner, Henry},
  journal={ACM Sigplan Notices},
  volume={45},
  number={10},
  pages={822--834},
  year={2010},
  publisher={ACM}
}
@book{reas2007processing,
abstract = {It has been more than twenty years since desktop publishing reinvented design, and it's clear that there is a growing need for designers and artists to learn programming skills to fill the widening gap between their ideas and the capability of their purchased software. This book is an introduction to the concepts of computer programming within the context of the visual arts. It offers a comprehensive reference and text for Processing (www.processing.org), an open-source programming language that can be used by students, artists, designers, architects, researchers, and anyone who wants to program images, animation, and interactivity.Processing have been tested in classrooms, workshops, and arts institutions, including UCLA, Carnegie Mellon, New York University, and Harvard University. Tutorial units make up the bulk of the book and introduce the syntax and concepts of software (including variables, functions, and object-oriented programming), cover such topics as photography and drawing in relation to software, and feature many short, prototypical example programs with related images and explanations. More advanced professional projects from such domains as animation, performance, and typography are discussed in interviews with their creators. "Extensions" present concise introductions to further areas of investigation, including computer vision, sound, and electronics. Appendixes, references to other material, and a glossary contain additional technical details. Processing can be used by reading each unit in order, or by following each category from the beginning of the book to the end. The Processing software and all of the code presented can be downloaded and run for future exploration.With essays by:<br Alexander R. Galloway, Golan Levin, R. Luke DuBois, Simon Greenwold, Francis Li, and Hernando Barrag\'{a}n and interviews with Jared Tarbell, Martin Wattenberg, James Paterson, Erik van Blockland, Ed Burton, Josh On, J\"{u}rg Lehni, Auriea Harvey and Micha\"{e}l Samyn, Mathew Cullen and Grady Hall, Bob Sabiston, Jennifer Steinkamp, Ruth Jarman and Joseph Gerhardt, Sue Costabile, Chris Csikszentmih\'{a}lyi, Golan Levin and Zachary Lieberman, and Mark Hansen.},
author = {Reas, Casey and Fry, Ben},
booktitle = {Processing},
doi = {10.1523/JNEUROSCI.2525-09.2009},
isbn = {9780262182621},
issn = {15292401},
number = {2},
pages = {736},
pmid = {20016109},
publisher = {Mit Press},
title = {{Processing: A Programming Handbook for Visual Designers and Artists}},
url = {http://www.amazon.com/dp/0262182629},
volume = {54},
year = {2007}
}
@inproceedings{Houston:2013:CFC:2503673.2503681,
address = {New York, NY, USA},
author = {Houston, Ben and Larsen, Wayne and Larsen, Bryan and Caron, Jack and Nikfetrat, Nima and Leung, Catherine and Silver, Jesse and Kamal-Al-Deen, Hasan and Callaghan, Peter and Chen, Roy and McKenna, Tim},
booktitle = {ACM SIGGRAPH 2013 Studio Talks},
doi = {10.1145/2503673.2503681},
isbn = {978-1-4503-2343-7},
keywords = {GUI,WebGL,client-server,collaboration software},
pages = {8:1----8:1},
publisher = {ACM},
series = {SIGGRAPH '13},
title = {{Clara.Io: Full-featured 3D Content Creation for the Web and Cloud Era}},
url = {http://doi.acm.org/10.1145/2503673.2503681},
year = {2013}
}
@book{terzidis2003expressive,
annote = {Acerca de Generative Design.},
author = {Terzidis, Kostas.},
isbn = {0-415-31744-4},
keywords = {Form;Computation;Generative Process},
publisher = {Taylor \& Francis},
title = {{\{E\}xpressive form: \{A\} conceptual approach to computational design / \{K\}ostas \{T\}erzidis}},
year = {2003}
}
@book{Maeda:2001:DN:559503,
abstract = {Most art and technology projects pair artists with engineers or scientists: the artist has the conception, and the technical person provides the know-how. John Maeda is an artist and a computer scientist, and he views the computer not as a substitute for brush and paint but as an artistic medium in its own right. Design By Numbers is a reader-friendly tutorial on both the philosophy and nuts-and-bolts techniques of programming for artists.$\backslash$n$\backslash$nPracticing what he preaches, Maeda composed Design By Numbers using a computational process he developed specifically for the book. He introduces a programming language and development environment, available on the Web, which can be freely downloaded or run directly within any JAVA-enabled Web browser. Appropriately, the new language is called DBN (for "design by numbers"). Designed for "visual" people—artists, designers, anyone who likes to pick up a pencil and doodle—DBN has very few commands and consists of elements resembling those of many other languages, such as LISP, LOGO, C/JAVA, and BASIC.$\backslash$n$\backslash$nThroughout the book Maeda emphasizes the importance—and delights—of understanding the motivation behind computer programming, as well as the many wonders that emerge from well-written programs. Sympathetic to the "mathematically challenged," he places minimal emphasis on mathematics in the first half of the book. Because computation is inherently mathematical, the books second half uses intermediate mathematical concepts that generally do not go beyond high-school algebra. The reader who masters the skills so clearly set out by Maeda will be ready to exploit the true character of digital media design.},
address = {Cambridge, MA, USA},
author = {Maeda, John},
isbn = {9780262632447},
issn = {08945373},
pages = {256},
pmid = {14137991},
publisher = {MIT Press},
title = {{Design by Numbers}},
year = {2001}
}
@article{Santos20144,
annote = {Usar t\'{e}cnicas de Generative Design tem um custo inicial maior que as t\'{e}cnicas convencionais. No entanto, este custo \'{e} compensado quando se torna necess\'{a}rio fazer modifica\c{c}\~{o}es ao modelo.},
author = {Leit\~{a}o, Ant\'{o}nio},
doi = {http://dx.doi.org/10.5151/despro-sigradi2013-0043},
issn = {2318-6968},
journal = {Blucher Design Proceedings},
number = {7},
pages = {235--238},
title = {{Pushing the Envelope: Stretching the Limits of Generative Design}},
url = {www.proceedings.blucher.com.br/article-details/pushing-the-envelope-stretching-the-limits-of-generative-design-14129},
volume = {1},
year = {2014}
}
@article{de2012modern,
author = {{de Oliveira Lopes}, Jos\'{e} Antonio Branquinho},
title = {{Modern Programming for Generative Design Extended Abstract}},
year = {2012}
}
